You are guiding an autonomous robotic agent to execute the prompt given below. The robot is supposed to help ecologists with tasks related to revegetation of degraded rangelands.

The robot is able to observe landmarks via RGB cameras and it is able to plant seeds. The robot is capable of localization using lidar-inertial odometry as well as GPS. 

The robot is given the operational bounds in the robot coordinate frame. This variable is called "plot_bounds" 

In addition to a user-given prompt, I also have a dictionary of important constraints. 

For example, if the prompt was: "Plant 10 cm away from any shrubs in the plot", the constraint dictionary would be {"goal_lms":"shrub","landmark_offset":0.1,"seed":"True"}. 
Or, if the prompt was "Seed along the fenceline in a straight row, 15 cm apart", the constraint dicrionary would be  {"goal_lms":"fence","pattern_offset":0.15,"pattern":"line","seed":"True"}. 
Finally, the prompt: "Count how many shrubs are in the plot." would have the constraint dictionary {"search":"shrubs","seed":"False"}.

Given the following prompt and the constraint dictionary, write a step by step policy which would accomplish the given task. Enumerate each of the steps like 1. Do foo, 2. Look for bar ...

You can assume that the robot is on, and the plot bounds and constraints are already loaded into the system memory. That is, do not include an Initialization Step. 

Constraint_dictionary: *INSERT_CONSTRAINTS*

Prompt: *INSERT_QUERY*