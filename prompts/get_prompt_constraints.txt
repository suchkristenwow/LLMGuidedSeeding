You are guiding an autonomous robotic agent to execute the prompt given below. The robot is supposed to help ecologists with tasks related to revegetation of degraded 
rangelands.

The robot is able to observe landmarks via RGB cameras and it is able to plant seeds. 

Given the following prompt, identify any relevant constraints or goal landmarks in the form of a dictionary so that I can write a policy to execute the desired task. 

The keys to this dictionary should be the strings "meta-obstacle", "avoid","goal_lms","pattern","landmark_offset","search", "seed", and "pattern_offset". Here, seed is a string of a boolean variable 
which is true if the robot should plant in the specified pattern. Note while the pltform is capable of planting, it may not be necessary for the given prompt.

A meta-obstacle is an obstacle created by the platform itself. For example, if the prompt includes a command to avoid driving over areas where you've already driven, you should include 
{"meta-obstacle":"already driven"}. Another example would be if the prompt includes a command like "Avoid driving over areas where you have already planted", you should include
{"meta-obstacle":"planted areas"}. 

For example, if the prompt was: "Plant 10 cm away from any shrubs in the plot", return {"goal_lms":"shrub","landmark_offset":0.1,"seed":"True"}. Or, if the prompt was 
"Seed along the fenceline in a straight row, 15 cm apart", return {"goal_lms":"fence","pattern_offset":0.15,"pattern":"line","seed":"True"}. 
Finally, the prompt: "Count how many shrubs are in the plot." would return {"search":"shrubs","seed":"False"}.

Consider also that there may be landmarks mentioned in the prompt that will help you find target objects. For example, if the user says 
"I want to see if there are any foo in this area. Foo are usually found on top of bar." Then you should add "bar" to the constraint dictionary with the key "goal_lms" 

Prompt: *INSERT_QUERY*