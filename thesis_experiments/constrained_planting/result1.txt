>>> Start Python Code

import time

# Step 1 & 2: Activate the robot's RGB cameras, GPS and lidar-inertial odometry system.
# (Assumed to be activated by default as there is no API method to activate them.)

all_objects = API.get_all_objects()  # Fetch all detected objects
visited_objects = []  # list to store visited field flags

for idx, obj in all_objects.items():
    if obj['name'] == 'field flag':  # Identify 'field flag' landmarks
        field_flag_point = API.Point(obj['position']['x'], obj['position']['y'], obj['position']['z'])  # Define point for each flag
        closest_waypoint = API.get_waypoint_closest_to_object(field_flag_point)  # Get the closest waypoint to the field flag
        while not API.is_available():  # Check if the robot is available before moving
            time.sleep(0.5)  # Wait if the robot is not available
        if API.check_waypoint_in_bounds(closest_waypoint):  # Check if waypoint is within bounds
            API.go_to_waypoint(closest_waypoint)  # Navigate towards the closest waypoint
            while not API.is_available():  # Wait until the robot reaches the waypoint
                time.sleep(0.5)
            API.plant()  # Plant a seed at the current location
            visited_objects.append(field_flag_point)  # Store the visited field flag location in the list
    else:
        continue

# Update task status to complete and provide a report of all the planted locations for user review.
print('Task Completed!')
print('Seeds were planted at the following locations:')
for obj in visited_objects:
    print(f'x: {obj.x}, y: {obj.y}, z: {obj.z}')

<<< End Python Code