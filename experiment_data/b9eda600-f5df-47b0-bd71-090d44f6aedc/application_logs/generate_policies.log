initting the Policy Generator with these arguments:  Namespace(prompt_path='/home/kristen/LLMGuidedSeeding/prompts/ex_query.txt', config_path='/home/kristen/LLMGuidedSeeding/configs/example_config.toml', logging_dir='/home/kristen/LLMGuidedSeeding/experiment_data/b9eda600-f5df-47b0-bd71-090d44f6aedc/policy_generation_logs', plot_bounds_path='/home/kristen/LLMGuidedSeeding/random_path.csv')
self.settings:  {'prompt_file': '/home/kristen/LLMGuidedSeeding/prompts/ex_query.txt', 'waypoint_threshold': 0.5, 'logging_directory': '/home/kristen/LLMGuidedSeeding/experiment_data/', 'commonObj_path': '/home/kristen/LLMGuidedSeeding/configs/commonObjs.txt', 'common_ip': '40.78.49.78', 'robot': {'object_sever_url': 'http://0.0.0.0:5005', 'host_url': 'http://0.0.0.0:5000', 'eps_dbscan': 0.5, 'min_samples': 5, 'median_filter_rate': 2, 'median_filtier_distance_threshold': 0.5, 'waypoint_threshold': 0.5}, 'llm_model': {'model_name': 'openai', 'full_name': 'gpt-3.5-turbo', 'api_env_var': 'openai_key'}, 'vqa_model': {'full_name': 'llava-1.5', 'ip': '0.0.0.0', 'port': 8000, 'temp': 0.8}}
parsing prompt to get constraints ...
llm_result: Based on the prompt provided, here is the dictionary format for the relevant constraints:

```python
{
    "goal_lms": ["conmods"],
    "avoid": "True",
    "pattern": "grid",
    "landmark_offset": 1.0,
    "seed": "True"
}
```

This dictionary indicates that the robot's goal landmarks are "conmods" (to avoid), it should avoid driving over wherever it has planted or any conmods, it should plant seeds in a grid pattern with a spacing of 1m, and the seed planting action should be true. 

If you have any further questions or need adjustments to this format, feel free to ask!
results_str:  {
    "goal_lms": ["conmods"],
    "avoid": "True",
    "pattern": "grid",
    "landmark_offset": 1.0,
    "seed": "True"
}
constraints:  {'goal_lms': ['conmods'], 'avoid': 'True', 'pattern': 'grid', 'landmark_offset': 1.0, 'seed': True}
building policy...
Question:  I believe this policy should complete the desired task. What do you think?
1. Begin by localizing the robot within the provided plot bounds using lidar-inertial odometry and GPS.
2. Use the RGB cameras to identify any existing landmarks, specifically looking for "conmods" within the environment.
3. If unable to locate any "conmods" in the immediate surroundings, ask the user for guidance: "I can't find any conmods, where should I look?"
4. Plan the shortest route to move inside the plot bounds if the robot is initially located outside the boundaries.
5. Start planting seeds in a 1m x 1m grid pattern while making sure to maintain a distance of 1m away from any identified "conmods" to avoid driving over them.
6. After planting in one grid cell, move to the adjacent grid cell while ensuring not to drive over any planted seeds or conmods.
7. Continue planting in a grid pattern until the entire bounded area has been covered with seeds.
8. Throughout the process, continuously monitor the robot's position and surroundings to ensure adherence to the planting pattern and avoidance of conmods as per the given constraints.
9. Once all seeds have been planted in the designated grid pattern, the task of planting in a 1m x 1m grid while avoiding conmods is successfully completed.
Feedback: 