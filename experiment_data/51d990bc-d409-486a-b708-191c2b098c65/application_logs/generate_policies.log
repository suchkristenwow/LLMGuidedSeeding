initting the Policy Generator with these arguments:  Namespace(prompt_path='/home/kristen/LLMGuidedSeeding/prompts/ex_query.txt', config_path='/home/kristen/LLMGuidedSeeding/configs/example_config.toml', logging_dir='/home/kristen/LLMGuidedSeeding/experiment_data/51d990bc-d409-486a-b708-191c2b098c65/policy_generation_logs', plot_bounds_path='/home/kristen/LLMGuidedSeeding/random_path.csv')
parsing prompt to get constraints ...
key:  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
llm_result: {"pattern": "grid", "pattern_offset": 1, "seed": "True", "avoid": ["planted areas", "conmods"]}
results_str:  {"pattern": "grid", "pattern_offset": 1, "seed": "True", "avoid": ["planted areas", "conmods"]}
constraints:  {'pattern': 'grid', 'pattern_offset': 1, 'seed': True, 'avoid': ['planted areas', 'conmods']}
building policy...
feedback is none!
constraints.keys():  dict_keys(['pattern', 'pattern_offset', 'seed', 'avoid'])
avoid in constraints!
constraints[avoid]:  ['planted areas', 'conmods']
<class 'list'>
extending prompt lms
prompt lms:  ['planted areas', 'conmods']
I dont know what planted areas is. Ill have to ask.
