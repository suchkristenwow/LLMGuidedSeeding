1. First, initialize a list in the system memory to keep track of all the planted locations. Let's call this list "planted_locations".

2. Verify the robot's current location. If the robot is outside the plot bounds, plan the shortest route possible to enter the plot bounds without crossing any 'avoid' areas defined in the constraints dictionary.

3. Once inside the plot bounds, observe the environment using the RGB cameras to identify the current landmarks in relation to the robot's position, and also the 'avoid' areas like 'planted areas' and 'conmods'.

4. Use the LIDAR-Inertial Odometry and GPS systems to verify the robot's position and orientation in relation to these landmarks and 'avoid' areas.

5. Generate a grid path within the plot bounds using the 'pattern' and 'pattern_offset' from the constraint dictionary, making sure that the grid does not overlap with any 'avoid' areas and does not exceed the plot bounds.

6. Plan the robot's route according to the generated grid, with a focus on minimizing the distance traveled.

7. Start following the planned route.

8. When the robot reaches a grid point, plant a seed and add the coordinates of the planted seed to the "planted_locations" list.

9. After planting, move to the next grid point along the planned route. Use the robot's localization systems to continuously verify its position.

10. Repeat steps 8 and 9 until all grid points within the plot bounds are covered and seeds have been planted at each point.

11. If at any point the robot cannot locate a 'goal_lms' landmark, alert the user by saying "I can't find {landmark}, where should I look?"

12. Once all seeds have been planted, confirm the completion of the task to the user. Also provide the total count and list of "planted_locations".

13. Stand by for further instructions or shutdown.