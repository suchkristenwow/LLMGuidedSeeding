initting the Policy Generator with these arguments:  Namespace(prompt_path='/home/kristen/LLMGuidedSeeding/prompts/ex_query.txt', config_path='/home/kristen/LLMGuidedSeeding/configs/example_config.toml', logging_dir='/home/kristen/LLMGuidedSeeding/experiment_data/38db8dee-f6dc-40e9-8a56-3ef65dce6de7/policy_generation_logs', plot_bounds_path='/home/kristen/LLMGuidedSeeding/random_path.csv')
parsing prompt to get constraints ...
key:  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
llm_result: {"pattern": "grid", "pattern_offset": 1, "avoid": "planted_area, conmods", "seed": "True"}
results_str:  {"pattern": "grid", "pattern_offset": 1, "avoid": "planted_area, conmods", "seed": "True"}
constraints:  {'pattern': 'grid', 'pattern_offset': 1, 'avoid': 'planted_area, conmods', 'seed': True}
building policy...
feedback is none!
constraints[k]:  grid
<class 'str'>
constraints[k]:  1
<class 'int'>
constraints[k]:  planted_area, conmods
<class 'str'>
split_constraint:  ['p']
this is  a list!
constraints[k]:  True
<class 'bool'>
extending prompt lms
prompt lms:  ['p']
I dont know what p is. Ill have to ask.
using enhanced prompt to generate a policy
key:  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
policy:  None
