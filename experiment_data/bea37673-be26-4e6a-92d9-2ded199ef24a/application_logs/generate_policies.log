initting the Policy Generator with these arguments:  Namespace(prompt_path='/home/kristen/LLMGuidedSeeding/prompts/ex_query.txt', config_path='/home/kristen/LLMGuidedSeeding/configs/example_config.toml', logging_dir='/home/kristen/LLMGuidedSeeding/experiment_data/bea37673-be26-4e6a-92d9-2ded199ef24a/policy_generation_logs', plot_bounds_path='/home/kristen/LLMGuidedSeeding/random_path.csv')
self.settings:  {'prompt_file': '/home/kristen/LLMGuidedSeeding/prompts/ex_query.txt', 'waypoint_threshold': 0.5, 'logging_directory': '/home/kristen/LLMGuidedSeeding/experiment_data/', 'commonObj_path': '/home/kristen/LLMGuidedSeeding/configs/commonObjs.txt', 'common_ip': '40.78.49.78', 'robot': {'object_sever_url': 'http://0.0.0.0:5005', 'host_url': 'http://0.0.0.0:5000', 'eps_dbscan': 0.5, 'min_samples': 5, 'median_filter_rate': 2, 'median_filtier_distance_threshold': 0.5, 'waypoint_threshold': 0.5}, 'llm_model': {'model_name': 'openai', 'full_name': 'gpt-3.5-turbo', 'api_env_var': 'openai_key'}, 'vqa_model': {'full_name': 'llava-1.5', 'ip': '0.0.0.0', 'port': 8000, 'temp': 0.8}}
parsing prompt to get constraints ...
llm_result: Based on the prompt provided, the relevant constraints and goal landmarks can be categorized as follows:

{"pattern":"grid", "pattern_offset":1.0, "avoid":["planted", "conmods"], "seed":"True"}

Does this format align with your requirements for executing the task?
results_str:  {"pattern":"grid", "pattern_offset":1.0, "avoid":["planted", "conmods"], "seed":"True"}
constraints:  {'pattern': 'grid', 'pattern_offset': 1.0, 'avoid': ['planted', 'conmods'], 'seed': True}
building policy...
Question:  I believe this policy should complete the desired task. What do you think?
1. Begin by checking if the robot is currently within the plot bounds. If the robot is outside the bounds, plan the shortest route to enter the bounded area without violating the plot bounds.
   
2. Start scanning the environment using RGB cameras to locate any existing shrubs or landmarks that need to be avoided based on the constraints provided. If the robot can't find a specific landmark mentioned in the constraints, prompt the user with: "I can't find {landmark}, where should I look?"

3. Once the relevant landmarks are identified, use lidar-inertial odometry and GPS to navigate within the plot bounds while avoiding the specified areas such as previously planted locations and conmods.

4. Begin planting seeds in a 1mx1m grid pattern within the bounded area. Ensure to maintain the specified 1.0m offset between each seed to adhere to the grid pattern constraint.

5. While moving and planting seeds, constantly monitor the surroundings to avoid driving over any previously planted areas or conmods as per the constraints.

6. Continue planting seeds systematically in the grid pattern until the entire bounded area is covered, ensuring no violations of the constraints regarding avoidance areas and spacing between seeds. 

7. Once the task is completed, provide a status update to indicate that the planting in a 1mx1m grid pattern while avoiding specified areas has been successfully executed.
