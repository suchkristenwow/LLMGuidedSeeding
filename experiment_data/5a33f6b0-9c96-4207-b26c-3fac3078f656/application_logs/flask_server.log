 * Serving Flask app 'app'
 * Debug mode: on
Received message: I believe this policy should complete the desired task. What do you think?
1. Check the current position of the robot using lidar-inertial odometry and GPS. If the robot is outside the plot bounds, plan the shortest route to enter the bounds.

2. If the robot is within the plot bounds, start the grid pattern from the current location.

3. Before moving to the next point on the grid, check the "avoid" list from the constraint dictionary. 

4. If the next point is clear of "planted area" and "conmods", proceed to that point. 

5. Upon reaching the next point, plant a seed if the "seed" boolean is True. Add this location to the system's memory as a planted location.

6. Repeat the steps 3 to 5, for each point in the 1mx1m grid within the plot bounds.

7. If the next point on the grid is within a "planted area" or "conmods", plan a path to avoid the obstacle and move to the next viable point on the grid.

8. Continue the process until the entire grid within the plot bounds has been covered.

9. Once the task is complete, inform the user: "Task completed. The entire plot has been covered in a 1mx1m grid pattern with seeds planted at each grid point."

10. If there's any uncertainty at any point, interface with the human operator for additional guidance. 

2024-06-19 15:06:11,733 - WARNING -  * Debugger is active!
2024-06-19 15:06:11,733 - INFO -  * Debugger PIN: 731-273-360
2024-06-19 15:11:13,235 - WARNING -  * Debugger is active!
2024-06-19 15:11:13,235 - INFO -  * Debugger PIN: 731-273-360
2024-06-19 15:11:32,259 - WARNING -  * Debugger is active!
2024-06-19 15:11:32,259 - INFO -  * Debugger PIN: 731-273-360
2024-06-19 15:12:42,199 - WARNING -  * Debugger is active!
