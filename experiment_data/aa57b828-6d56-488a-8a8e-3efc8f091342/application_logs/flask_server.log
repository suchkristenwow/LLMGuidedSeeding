 * Serving Flask app 'app'
 * Debug mode: on
Types: <class 'list'>, <class 'sensor_msgs.msg._PointCloud2.PointCloud2'>
Received message: I believe this policy should complete the desired task. What do you think?
1. Check the current location of the robot using GPS and lidar-inertial odometry. If the robot is outside the plot bounds, plan the shortest route to enter the plot bounds.

2. Start at one corner of the plot bounds to begin seeding in a grid pattern. Make sure to keep a distance of 1 meter (according to 'pattern_offset') between each seed.

3. Use the RGB cameras to constantly observe the environment and identify the landmarks listed in the 'avoid' category. 

4. If a 'conmod' or a 'planted area' is detected within the next planned path, replan the route to avoid driving over these landmarks.

5. Continue this process, moving in a grid pattern, planting seeds at each point of the grid within the plot bounds.

6. Each time a seed is planted, add the location to the system memory as 'planted location'. This will help in avoiding these areas in the future.

7. If a 'conmod' is not visible or identifiable, notify the user by saying "I can't find conmod, where should I look?"

8. Continue this process until the entire plot within the bounds has been covered in a 1mx1m grid pattern.

9. Once the entire plot has been covered, confirm task completion to the user. 

2024-06-19 11:46:14,750 - WARNING -  * Debugger is active!
2024-06-19 11:46:14,751 - INFO -  * Debugger PIN: 731-273-360
2024-06-19 11:46:43,810 - WARNING -  * Debugger is active!
2024-06-19 11:46:43,810 - INFO -  * Debugger PIN: 731-273-360
2024-06-19 11:48:34,222 - WARNING -  * Debugger is active!
2024-06-19 11:48:34,222 - INFO -  * Debugger PIN: 731-273-360
2024-06-19 11:56:31,915 - WARNING -  * Debugger is active!
2024-06-19 11:56:31,915 - INFO -  * Debugger PIN: 731-273-360
2024-06-19 11:57:16,019 - WARNING -  * Debugger is active!
2024-06-19 11:57:16,019 - INFO -  * Debugger PIN: 731-273-360
